#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.2
#  in conjunction with Tcl version 8.6
#    Mar 17, 2020 08:18:54 PM EDT  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Kegerator_V1_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    Kegerator_V1_support.set_Tk_var()
    top = Main (root)
    Kegerator_V1_support.init(root, top)
    root.mainloop()

w = None
def create_Main(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Main(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    Kegerator_V1_support.set_Tk_var()
    top = Main (w)
    Kegerator_V1_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Main():
    global w
    w.destroy()
    w = None

class Main:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#ffffff'  # X11 color: 'white'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font1 = "-family {helvetica} -size 12"
        font10 = "-family {Arial} -size 12 -slant italic"
        font11 = "-family {Arial} -size 12 -underline 1"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("800x480")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Main")
        top.configure(background="#c0c0c0")
        top.configure(highlightbackground="#00ff40")
        top.configure(highlightcolor="black")

        self.LEFT = tk.Frame(top)
        self.LEFT.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=0.333)
        self.LEFT.configure(relief='flat')
        self.LEFT.configure(borderwidth="10")
        self.LEFT.configure(background="#c0c0c0")
        self.LEFT.configure(highlightbackground="#000000")
        self.LEFT.configure(highlightcolor="#ff0080")

        self.Button_START_POUR = tk.Button(self.LEFT)
        self.Button_START_POUR.place(relx=0.263, rely=0.083, height=105
                , width=133)
        self.Button_START_POUR.configure(activebackground="#ffffff")
        self.Button_START_POUR.configure(activeforeground="#000000")
        self.Button_START_POUR.configure(background="#00ff00")
        self.Button_START_POUR.configure(borderwidth="10")
        self.Button_START_POUR.configure(command=Kegerator_V1_support.COMMAND_START_POUR)
        self.Button_START_POUR.configure(compound='center')
        self.Button_START_POUR.configure(cursor="arrow")
        self.Button_START_POUR.configure(disabledforeground="#a3a3a3")
        self.Button_START_POUR.configure(font="-family {helvetica} -size 12")
        self.Button_START_POUR.configure(foreground="#000000")
        self.Button_START_POUR.configure(highlightbackground="#0000ff")
        self.Button_START_POUR.configure(highlightcolor="black")
        self.Button_START_POUR.configure(pady="0")
        self.Button_START_POUR.configure(text='''POUR''')

        self.Button_STOP_POUR = tk.Button(self.LEFT)
        self.Button_STOP_POUR.place(relx=0.263, rely=0.375, height=105
                , width=134)
        self.Button_STOP_POUR.configure(activebackground="#ffffff")
        self.Button_STOP_POUR.configure(activeforeground="#000000")
        self.Button_STOP_POUR.configure(background="#ff0000")
        self.Button_STOP_POUR.configure(borderwidth="10")
        self.Button_STOP_POUR.configure(command=Kegerator_V1_support.COMMAND_STOP_POUR)
        self.Button_STOP_POUR.configure(compound='center')
        self.Button_STOP_POUR.configure(cursor="arrow")
        self.Button_STOP_POUR.configure(disabledforeground="#a3a3a3")
        self.Button_STOP_POUR.configure(font="-family {helvetica} -size 12")
        self.Button_STOP_POUR.configure(foreground="#000000")
        self.Button_STOP_POUR.configure(highlightbackground="#0000ff")
        self.Button_STOP_POUR.configure(highlightcolor="black")
        self.Button_STOP_POUR.configure(pady="0")
        self.Button_STOP_POUR.configure(text='''E-STOP''')

        self.Button_CLEAN = tk.Button(self.LEFT)
        self.Button_CLEAN.place(relx=0.263, rely=0.667, height=105, width=134)
        self.Button_CLEAN.configure(activebackground="#ffffff")
        self.Button_CLEAN.configure(activeforeground="#000000")
        self.Button_CLEAN.configure(background="#0080ff")
        self.Button_CLEAN.configure(borderwidth="10")
        self.Button_CLEAN.configure(command=Kegerator_V1_support.COMMAND_CLEAN)
        self.Button_CLEAN.configure(compound='center')
        self.Button_CLEAN.configure(cursor="arrow")
        self.Button_CLEAN.configure(disabledforeground="#a3a3a3")
        self.Button_CLEAN.configure(font="-family {helvetica} -size 12")
        self.Button_CLEAN.configure(foreground="#000000")
        self.Button_CLEAN.configure(highlightbackground="#0000ff")
        self.Button_CLEAN.configure(highlightcolor="black")
        self.Button_CLEAN.configure(pady="0")
        self.Button_CLEAN.configure(text='''CLEAN''')

        self.MIDDLE = tk.Frame(top)
        self.MIDDLE.place(relx=0.319, rely=0.0, relheight=1.0, relwidth=0.335)
        self.MIDDLE.configure(relief='flat')
        self.MIDDLE.configure(borderwidth="10")
        self.MIDDLE.configure(background="#c0c0c0")
        self.MIDDLE.configure(highlightbackground="#000000")
        self.MIDDLE.configure(highlightcolor="#ff0080")

        self.Label_Home = tk.Label(self.MIDDLE)
        self.Label_Home.place(relx=0.131, rely=0.094, height=56, width=175)
        self.Label_Home.configure(activebackground="#f9f9f9")
        self.Label_Home.configure(activeforeground="black")
        self.Label_Home.configure(background="#c0c0c0")
        self.Label_Home.configure(disabledforeground="#a3a3a3")
        self.Label_Home.configure(font="-family {Engravers MT} -size 14")
        self.Label_Home.configure(foreground="#000000")
        self.Label_Home.configure(highlightbackground="#d9d9d9")
        self.Label_Home.configure(highlightcolor="black")
        self.Label_Home.configure(text='''Herr Fass''')

        self.Label_Beer_Size = tk.Label(self.MIDDLE)
        self.Label_Beer_Size.place(relx=0.093, rely=0.469, height=41, width=200)
        self.Label_Beer_Size.configure(activebackground="#f9f9f9")
        self.Label_Beer_Size.configure(activeforeground="black")
        self.Label_Beer_Size.configure(background="#c0c0c0")
        self.Label_Beer_Size.configure(disabledforeground="#a3a3a3")
        self.Label_Beer_Size.configure(font=font1)
        self.Label_Beer_Size.configure(foreground="#000000")
        self.Label_Beer_Size.configure(highlightbackground="#d9d9d9")
        self.Label_Beer_Size.configure(highlightcolor="black")
        self.Label_Beer_Size.configure(text='''Select Beer Size in oz''')

        self.ComboBox_Beer_Selection = ttk.Combobox(self.MIDDLE)
        self.ComboBox_Beer_Selection.place(relx=0.112, rely=0.563
                , relheight=0.054, relwidth=0.698)
        self.value_list = ['8,10,12,16',]
        self.ComboBox_Beer_Selection.configure(values=self.value_list)
        self.ComboBox_Beer_Selection.configure(font=font1)
        self.ComboBox_Beer_Selection.configure(show="Beer Size")
        self.ComboBox_Beer_Selection.configure(textvariable=Kegerator_V1_support.Beer_Size)
        self.ComboBox_Beer_Selection.configure(background="#ffffff")
        self.ComboBox_Beer_Selection.configure(takefocus="")
        self.ComboBox_Beer_Selection.configure(cursor="fleur")

        self.Label_Home_1 = tk.Label(self.MIDDLE)
        self.Label_Home_1.place(relx=0.131, rely=0.188, height=56, width=175)
        self.Label_Home_1.configure(activebackground="#f9f9f9")
        self.Label_Home_1.configure(activeforeground="black")
        self.Label_Home_1.configure(background="#c0c0c0")
        self.Label_Home_1.configure(disabledforeground="#a3a3a3")
        self.Label_Home_1.configure(font=font10)
        self.Label_Home_1.configure(foreground="#000000")
        self.Label_Home_1.configure(highlightbackground="#d9d9d9")
        self.Label_Home_1.configure(highlightcolor="black")
        self.Label_Home_1.configure(text='''Drink Responsibly''')

        self.RIGHT = tk.Frame(top)
        self.RIGHT.place(relx=0.675, rely=0.0, relheight=1.0, relwidth=0.334)
        self.RIGHT.configure(relief='flat')
        self.RIGHT.configure(borderwidth="10")
        self.RIGHT.configure(background="#c0c0c0")
        self.RIGHT.configure(highlightbackground="#c0c0c0")
        self.RIGHT.configure(highlightcolor="#ff0080")

        self.Label_Value_Keg_Level = tk.Label(self.RIGHT)
        self.Label_Value_Keg_Level.place(relx=0.674, rely=0.188, height=26
                , width=72)
        self.Label_Value_Keg_Level.configure(background="#ffffff")
        self.Label_Value_Keg_Level.configure(disabledforeground="#a3a3a3")
        self.Label_Value_Keg_Level.configure(font=font1)
        self.Label_Value_Keg_Level.configure(foreground="#000000")
        self.Label_Value_Keg_Level.configure(text='''0''')

        self.Label_Status = tk.Label(self.RIGHT)
        self.Label_Status.place(relx=0.225, rely=0.094, height=26, width=147)
        self.Label_Status.configure(activebackground="#f9f9f9")
        self.Label_Status.configure(activeforeground="black")
        self.Label_Status.configure(background="#c0c0c0")
        self.Label_Status.configure(disabledforeground="#a3a3a3")
        self.Label_Status.configure(font=font11)
        self.Label_Status.configure(foreground="#000000")
        self.Label_Status.configure(highlightbackground="#d9d9d9")
        self.Label_Status.configure(highlightcolor="black")
        self.Label_Status.configure(text='''INFORMATION''')

        self.Label_Keg_Level = tk.Label(self.RIGHT)
        self.Label_Keg_Level.place(relx=0.0, rely=0.188, height=26, width=147)
        self.Label_Keg_Level.configure(activebackground="#f9f9f9")
        self.Label_Keg_Level.configure(activeforeground="black")
        self.Label_Keg_Level.configure(background="#c0c0c0")
        self.Label_Keg_Level.configure(cursor="fleur")
        self.Label_Keg_Level.configure(disabledforeground="#a3a3a3")
        self.Label_Keg_Level.configure(font="-family {helvetica} -size 12")
        self.Label_Keg_Level.configure(foreground="#000000")
        self.Label_Keg_Level.configure(highlightbackground="#d9d9d9")
        self.Label_Keg_Level.configure(highlightcolor="black")
        self.Label_Keg_Level.configure(text='''KEG LEVEL''')

        self.Label_CO2_Level = tk.Label(self.RIGHT)
        self.Label_CO2_Level.place(relx=0.0, rely=0.313, height=26, width=162)
        self.Label_CO2_Level.configure(activebackground="#f9f9f9")
        self.Label_CO2_Level.configure(activeforeground="black")
        self.Label_CO2_Level.configure(background="#c0c0c0")
        self.Label_CO2_Level.configure(disabledforeground="#a3a3a3")
        self.Label_CO2_Level.configure(font="-family {helvetica} -size 12")
        self.Label_CO2_Level.configure(foreground="#000000")
        self.Label_CO2_Level.configure(highlightbackground="#d9d9d9")
        self.Label_CO2_Level.configure(highlightcolor="black")
        self.Label_CO2_Level.configure(text='''CO2 TANK LEVEL''')

        self.Label_Value_CO2_Level = tk.Label(self.RIGHT)
        self.Label_Value_CO2_Level.place(relx=0.674, rely=0.313, height=26
                , width=72)
        self.Label_Value_CO2_Level.configure(activebackground="#f9f9f9")
        self.Label_Value_CO2_Level.configure(activeforeground="black")
        self.Label_Value_CO2_Level.configure(background="#ffffff")
        self.Label_Value_CO2_Level.configure(disabledforeground="#a3a3a3")
        self.Label_Value_CO2_Level.configure(font="-family {helvetica} -size 12")
        self.Label_Value_CO2_Level.configure(foreground="#000000")
        self.Label_Value_CO2_Level.configure(highlightbackground="#d9d9d9")
        self.Label_Value_CO2_Level.configure(highlightcolor="black")
        self.Label_Value_CO2_Level.configure(text='''0''')

        self.Label_Status_6 = tk.Label(self.RIGHT)
        self.Label_Status_6.place(relx=0.225, rely=0.583, height=26, width=147)
        self.Label_Status_6.configure(activebackground="#f9f9f9")
        self.Label_Status_6.configure(activeforeground="black")
        self.Label_Status_6.configure(background="#c0c0c0")
        self.Label_Status_6.configure(disabledforeground="#a3a3a3")
        self.Label_Status_6.configure(font=font11)
        self.Label_Status_6.configure(foreground="#000000")
        self.Label_Status_6.configure(highlightbackground="#d9d9d9")
        self.Label_Status_6.configure(highlightcolor="black")
        self.Label_Status_6.configure(text='''ANALYTICS''')

        self.Label_Cumulative_oz = tk.Label(self.RIGHT)
        self.Label_Cumulative_oz.place(relx=0.0, rely=0.677, height=26
                , width=177)
        self.Label_Cumulative_oz.configure(activebackground="#f9f9f9")
        self.Label_Cumulative_oz.configure(activeforeground="black")
        self.Label_Cumulative_oz.configure(background="#c0c0c0")
        self.Label_Cumulative_oz.configure(disabledforeground="#a3a3a3")
        self.Label_Cumulative_oz.configure(font="-family {helvetica} -size 12")
        self.Label_Cumulative_oz.configure(foreground="#000000")
        self.Label_Cumulative_oz.configure(highlightbackground="#d9d9d9")
        self.Label_Cumulative_oz.configure(highlightcolor="black")
        self.Label_Cumulative_oz.configure(text='''CUMULATIVE OZ''')

        self.Label__Value_Cumulative_oz = tk.Label(self.RIGHT)
        self.Label__Value_Cumulative_oz.place(relx=0.674, rely=0.677, height=26
                , width=72)
        self.Label__Value_Cumulative_oz.configure(activebackground="#f9f9f9")
        self.Label__Value_Cumulative_oz.configure(activeforeground="black")
        self.Label__Value_Cumulative_oz.configure(background="#ffffff")
        self.Label__Value_Cumulative_oz.configure(disabledforeground="#a3a3a3")
        self.Label__Value_Cumulative_oz.configure(font="-family {helvetica} -size 12")
        self.Label__Value_Cumulative_oz.configure(foreground="#000000")
        self.Label__Value_Cumulative_oz.configure(highlightbackground="#d9d9d9")
        self.Label__Value_Cumulative_oz.configure(highlightcolor="black")
        self.Label__Value_Cumulative_oz.configure(text='''0''')

        self.Button_Reset_Keg_Level = ttk.Button(self.RIGHT)
        self.Button_Reset_Keg_Level.place(relx=0.0, rely=0.438, height=30
                , width=114)
        self.Button_Reset_Keg_Level.configure(command=Kegerator_V1_support.COMMAND_RESET_KEG_LEVEL)
        self.Button_Reset_Keg_Level.configure(takefocus="")
        self.Button_Reset_Keg_Level.configure(text='''Reset Keg Level''')

        self.Button_Reset_CO2_Level_6 = ttk.Button(self.RIGHT)
        self.Button_Reset_CO2_Level_6.place(relx=0.449, rely=0.438, height=30
                , width=114)
        self.Button_Reset_CO2_Level_6.configure(command=Kegerator_V1_support.COMMAND_RESET_CO2_LEVEL)
        self.Button_Reset_CO2_Level_6.configure(takefocus="")
        self.Button_Reset_CO2_Level_6.configure(text='''Reset CO2 Level''')

        self.Label_EXTRA = tk.Label(self.RIGHT)
        self.Label_EXTRA.place(relx=0.0, rely=0.802, height=26, width=177)
        self.Label_EXTRA.configure(activebackground="#f9f9f9")
        self.Label_EXTRA.configure(activeforeground="black")
        self.Label_EXTRA.configure(background="#c0c0c0")
        self.Label_EXTRA.configure(disabledforeground="#a3a3a3")
        self.Label_EXTRA.configure(font="-family {helvetica} -size 12")
        self.Label_EXTRA.configure(foreground="#000000")
        self.Label_EXTRA.configure(highlightbackground="#d9d9d9")
        self.Label_EXTRA.configure(highlightcolor="black")
        self.Label_EXTRA.configure(text='''EXTRA LABEL''')

        self.Label__Value_EXTRA = tk.Label(self.RIGHT)
        self.Label__Value_EXTRA.place(relx=0.674, rely=0.802, height=26
                , width=72)
        self.Label__Value_EXTRA.configure(activebackground="#f9f9f9")
        self.Label__Value_EXTRA.configure(activeforeground="black")
        self.Label__Value_EXTRA.configure(background="#ffffff")
        self.Label__Value_EXTRA.configure(disabledforeground="#a3a3a3")
        self.Label__Value_EXTRA.configure(font="-family {helvetica} -size 12")
        self.Label__Value_EXTRA.configure(foreground="#000000")
        self.Label__Value_EXTRA.configure(highlightbackground="#d9d9d9")
        self.Label__Value_EXTRA.configure(highlightcolor="black")
        self.Label__Value_EXTRA.configure(text='''0''')

if __name__ == '__main__':
    vp_start_gui()





