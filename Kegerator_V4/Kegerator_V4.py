#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.2
#  in conjunction with Tcl version 8.6
#    Mar 19, 2020 11:56:18 AM EDT  platform: Windows NT

import sys, time
    
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Kegerator_V4_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    Kegerator_V4_support.set_Tk_var()
    top = Main (root)
    Kegerator_V4_support.init(root, top)
    root.mainloop()

w = None
def create_Main(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Main(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    Kegerator_V4_support.set_Tk_var()
    top = Main (w)
    Kegerator_V4_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Main():
    global w
    w.destroy()
    w = None


class Main:
    def __init__(self, top=None):

        
############## Values that Need to be Updated #####################
        self.Beer_Selected_State = [False,False,False]
        self.Sampler_State = False
        self.Small_State = False
        self.Large_State = False
        self.Reset_Keg = False
        # Status Bar
        self.Pouring_State = False
        self.Beer_Selected = False
        self.Done_Pouring_State = False
        self.Cleaning_State = False
        self.Done_Bit = False

        # Error Bar
        self.EStop_Bit = False
        self.Replace_Keg = False
        self.CO2_LOW_HIGH = False
        self.Cleaning_Hardware = False

        self.tracker_beer = None
 
        self.Beer_Level = 660
        self.Keg_Level = 100
        self.CO2 = 14
        self.Cumulative = 0
        self.Error_String = ''
        self.Status_Text = ['Select Beer Size','Ready','Pouring','Finished','Error','Cleaning']
        self.Errors_Text = ['E-Stop Triggered','Replace Keg','Check CO2','Check Leaks','Upgrade Cleaning Hardware']
####################################################################
        
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#ffffff'  # X11 color: 'white'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("800x480")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Herr Bier Fass")
        top.configure(background="#c0c0c0")
        top.configure(highlightbackground="#00ff40")
        top.configure(highlightcolor="black")

        self.LEFT_SIDE = tk.Frame(top)
        self.LEFT_SIDE.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=0.334)
        self.LEFT_SIDE.configure(relief='flat')
        self.LEFT_SIDE.configure(borderwidth="10")
        self.LEFT_SIDE.configure(background="#c0c0c0")
        self.LEFT_SIDE.configure(highlightbackground="#000000")
        self.LEFT_SIDE.configure(highlightcolor="#ff0080")

        self.Button_POUR = tk.Button(self.LEFT_SIDE)
        self.Button_POUR.place(relx=0.337, rely=0.156, height=100, width=125)
        self.Button_POUR.configure(activebackground="#ffffff")
        self.Button_POUR.configure(activeforeground="#000000")
        self.Button_POUR.configure(background="#00ff00")
        self.Button_POUR.configure(borderwidth="10")
        self.Button_POUR.configure(command=self.COMMAND_START_POUR) ##CGerrard 3/22#########################################################
        self.Button_POUR.configure(compound='center')
        self.Button_POUR.configure(cursor="arrow")
        self.Button_POUR.configure(disabledforeground="#a3a3a3")
        self.Button_POUR.configure(font="-family {Segoe UI Light} -size 12 -weight bold")
        self.Button_POUR.configure(foreground="#000000")
        self.Button_POUR.configure(highlightbackground="#ffffff")
        self.Button_POUR.configure(highlightcolor="#000000")
        self.Button_POUR.configure(pady="0")
        self.Button_POUR.configure(text='''POUR''')

        self.Button_ESTOP = tk.Button(self.LEFT_SIDE)
        self.Button_ESTOP.place(relx=0.337, rely=0.417, height=100, width=125)
        self.Button_ESTOP.configure(activebackground="#ffffff")
        self.Button_ESTOP.configure(activeforeground="#000000")
        self.Button_ESTOP.configure(background="#ff0000")
        self.Button_ESTOP.configure(borderwidth="10")
        self.Button_ESTOP.configure(command=self.COMMAND_STOP_POUR) ##CGerrard 3/22#########################################################
        self.Button_ESTOP.configure(compound='center')
        self.Button_ESTOP.configure(cursor="fleur")
        self.Button_ESTOP.configure(disabledforeground="#a3a3a3")
        self.Button_ESTOP.configure(font="-family {Segoe UI Light} -size 12 -weight bold")
        self.Button_ESTOP.configure(foreground="#000000")
        self.Button_ESTOP.configure(highlightbackground="#ffffff")
        self.Button_ESTOP.configure(highlightcolor="black")
        self.Button_ESTOP.configure(pady="0")
        self.Button_ESTOP.configure(text='''E-STOP''')

        self.Button_CLEAN = tk.Button(self.LEFT_SIDE)
        self.Button_CLEAN.place(relx=0.337, rely=0.677, height=100, width=125)
        self.Button_CLEAN.configure(activebackground="#ffffff")
        self.Button_CLEAN.configure(activeforeground="#000000")
        self.Button_CLEAN.configure(background="#0080ff")
        self.Button_CLEAN.configure(borderwidth="10")
        self.Button_CLEAN.configure(command=self.COMMAND_CLEAN) ##CGerrard 4/11#########################################################
        self.Button_CLEAN.configure(compound='center')
        self.Button_CLEAN.configure(cursor="fleur")
        self.Button_CLEAN.configure(disabledforeground="#a3a3a3")
        self.Button_CLEAN.configure(font="-family {Segoe UI Light} -size 12 -weight bold")
        self.Button_CLEAN.configure(foreground="#000000")
        self.Button_CLEAN.configure(highlightbackground="#ffffff")
        self.Button_CLEAN.configure(highlightcolor="black")
        self.Button_CLEAN.configure(pady="0")
        self.Button_CLEAN.configure(text='''CLEAN''')

        self.MIDDLE = tk.Frame(top)
        self.MIDDLE.place(relx=0.338, rely=0.0, relheight=1.0, relwidth=0.316)
        self.MIDDLE.configure(relief='flat')
        self.MIDDLE.configure(borderwidth="10")
        self.MIDDLE.configure(background="#c0c0c0")
        self.MIDDLE.configure(highlightbackground="#000000")
        self.MIDDLE.configure(highlightcolor="#ff0080")

        self.Label_HERR_FAUSS = tk.Label(self.MIDDLE)
        self.Label_HERR_FAUSS.place(relx=0.178, rely=0.125, height=26, width=150)

        self.Label_HERR_FAUSS.configure(activebackground="#f9f9f9")
        self.Label_HERR_FAUSS.configure(activeforeground="black")
        self.Label_HERR_FAUSS.configure(background="#c0c0c0")
        self.Label_HERR_FAUSS.configure(disabledforeground="#a3a3a3")
        self.Label_HERR_FAUSS.configure(font="-family {Segoe UI} -size 16")
        self.Label_HERR_FAUSS.configure(foreground="#000000")
        self.Label_HERR_FAUSS.configure(highlightbackground="#d9d9d9")
        self.Label_HERR_FAUSS.configure(highlightcolor="black")
        self.Label_HERR_FAUSS.configure(text='''Herr Bier Fass''')

        self.Label_Drink_Responsibly = tk.Label(self.MIDDLE)
        self.Label_Drink_Responsibly.place(relx=0.17, rely=0.219, height=26, width=155)
        self.Label_Drink_Responsibly.configure(activebackground="#f9f9f9")
        self.Label_Drink_Responsibly.configure(activeforeground="black")
        self.Label_Drink_Responsibly.configure(background="#c0c0c0")
        self.Label_Drink_Responsibly.configure(disabledforeground="#a3a3a3")
        self.Label_Drink_Responsibly.configure(font="-family {Segoe UI} -size 12 -slant italic")
        self.Label_Drink_Responsibly.configure(foreground="#000000")
        self.Label_Drink_Responsibly.configure(highlightbackground="#d9d9d9")
        self.Label_Drink_Responsibly.configure(highlightcolor="black")
        self.Label_Drink_Responsibly.configure(text='''Drink Responsibly''')


        self.CheckButton_Sampler = tk.Checkbutton(self.MIDDLE)
        self.CheckButton_Sampler.place(relx=0.178, rely=0.458, relheight=0.094, relwidth=0.625)
        self.CheckButton_Sampler.configure(activebackground="#c0c0c0")
        self.CheckButton_Sampler.configure(activeforeground="#000000")
        self.CheckButton_Sampler.configure(background="#c0c0c0")
        self.CheckButton_Sampler.configure(command=self.Sampler) ##CGerrard 3/22#########################################################
        self.CheckButton_Sampler.configure(disabledforeground="#a3a3a3")
        self.CheckButton_Sampler.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.CheckButton_Sampler.configure(foreground="#000000")
        self.CheckButton_Sampler.configure(highlightbackground="#ffffff")
        self.CheckButton_Sampler.configure(highlightcolor="black")
        self.CheckButton_Sampler.configure(justify='left')
        self.CheckButton_Sampler.configure(text='''Sampler (4 oz)''')
        self.CheckButton_Sampler.configure(variable=Kegerator_V4_support.CheckSampler)

        self.CheckButton_Small = tk.Checkbutton(self.MIDDLE)
        self.CheckButton_Small.place(relx=0.178, rely=0.563, relheight=0.094, relwidth=0.625)
        self.CheckButton_Small.configure(activebackground="#c0c0c0")
        self.CheckButton_Small.configure(activeforeground="#000000")
        self.CheckButton_Small.configure(background="#c0c0c0")
        self.CheckButton_Small.configure(command= self.Small) ##CGerrard 3/22#########################################################
        self.CheckButton_Small.configure(disabledforeground="#a3a3a3")
        self.CheckButton_Small.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.CheckButton_Small.configure(foreground="#000000")
        self.CheckButton_Small.configure(highlightbackground="#ffffff")
        self.CheckButton_Small.configure(highlightcolor="black")
        self.CheckButton_Small.configure(justify='left')
        self.CheckButton_Small.configure(text='''Small (8 oz)    ''')
        self.CheckButton_Small.configure(variable=Kegerator_V4_support.CheckSmall)

        self.CheckButton_Large = tk.Checkbutton(self.MIDDLE)
        self.CheckButton_Large.place(relx=0.178, rely=0.667, relheight=0.094, relwidth=0.625)
        self.CheckButton_Large.configure(activebackground="#c0c0c0")
        self.CheckButton_Large.configure(activeforeground="#000000")
        self.CheckButton_Large.configure(background="#c0c0c0")
        self.CheckButton_Large.configure(command=self.Large) ##CGerrard 3/22#########################################################
        self.CheckButton_Large.configure(disabledforeground="#a3a3a3")
        self.CheckButton_Large.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.CheckButton_Large.configure(foreground="#000000")
        self.CheckButton_Large.configure(highlightbackground="#ffffff")
        self.CheckButton_Large.configure(highlightcolor="black")
        self.CheckButton_Large.configure(justify='left')
        self.CheckButton_Large.configure(text='''Large (12 oz) ''')
        self.CheckButton_Large.configure(variable=Kegerator_V4_support.CheckLarge)

        
        self.Label_Drink_Responsibly_8 = tk.Label(self.MIDDLE)
        self.Label_Drink_Responsibly_8.place(relx=0.059, rely=0.417, height=26, width=220)
        self.Label_Drink_Responsibly_8.configure(activebackground="#f9f9f9")
        self.Label_Drink_Responsibly_8.configure(activeforeground="black")
        self.Label_Drink_Responsibly_8.configure(background="#c0c0c0")
        self.Label_Drink_Responsibly_8.configure(disabledforeground="#a3a3a3")
        self.Label_Drink_Responsibly_8.configure(font="-family {Segoe UI} -size 12")
        self.Label_Drink_Responsibly_8.configure(foreground="#000000")
        self.Label_Drink_Responsibly_8.configure(highlightbackground="#d9d9d9")
        self.Label_Drink_Responsibly_8.configure(highlightcolor="black")
        self.Label_Drink_Responsibly_8.configure(text='''Select Beer Size (oz)''')

        self.RIGHT_SIDE = tk.Frame(top)
        self.RIGHT_SIDE.place(relx=0.656, rely=0.0, relheight=1.0, relwidth=0.334)
        self.RIGHT_SIDE.configure(relief='flat')
        self.RIGHT_SIDE.configure(borderwidth="10")
        self.RIGHT_SIDE.configure(background="#c0c0c0")
        self.RIGHT_SIDE.configure(highlightbackground="#000000")
        self.RIGHT_SIDE.configure(highlightcolor="#ff0080")

        self.Button_Reset_Keg_Level = tk.Button(self.RIGHT_SIDE)
        self.Button_Reset_Keg_Level.place(relx=0.281, rely=0.771, height=40, width=125)
        self.Button_Reset_Keg_Level.configure(activebackground="#ffffff")
        self.Button_Reset_Keg_Level.configure(activeforeground="#000000")
        self.Button_Reset_Keg_Level.configure(background="#808080")
        self.Button_Reset_Keg_Level.configure(borderwidth="1")
        self.Button_Reset_Keg_Level.configure(command= self.Reset_Keg_Level) ##CGerrard 3/22#########################################################
        self.Button_Reset_Keg_Level.configure(compound='center')
        self.Button_Reset_Keg_Level.configure(cursor="fleur")
        self.Button_Reset_Keg_Level.configure(disabledforeground="#a3a3a3")
        self.Button_Reset_Keg_Level.configure(font="-family {Segoe UI Light} -size 12")
        self.Button_Reset_Keg_Level.configure(foreground="#ffffff")
        self.Button_Reset_Keg_Level.configure(highlightbackground="#ffffff")
        self.Button_Reset_Keg_Level.configure(highlightcolor="#000000")
        self.Button_Reset_Keg_Level.configure(pady="0")
        self.Button_Reset_Keg_Level.configure(text='''Keg Level''')

        self.Label_Information = tk.Label(self.RIGHT_SIDE)
        self.Label_Information.place(relx=0.225, rely=0.219, height=26, width=160)
        self.Label_Information.configure(activebackground="#f9f9f9")
        self.Label_Information.configure(activeforeground="black")
        self.Label_Information.configure(background="#c0c0c0")
        self.Label_Information.configure(disabledforeground="#a3a3a3")
        self.Label_Information.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label_Information.configure(foreground="#000000")
        self.Label_Information.configure(highlightbackground="#d9d9d9")
        self.Label_Information.configure(highlightcolor="black")
        self.Label_Information.configure(text='''Information''')

        self.Label_Keg_Level = tk.Label(self.RIGHT_SIDE)
        self.Label_Keg_Level.place(relx=0.0, rely=0.292, height=35, width=160)
        self.Label_Keg_Level.configure(activebackground="#f9f9f9")
        self.Label_Keg_Level.configure(activeforeground="black")
        self.Label_Keg_Level.configure(background="#c0c0c0")
        self.Label_Keg_Level.configure(disabledforeground="#a3a3a3")
        self.Label_Keg_Level.configure(font="-family {Segoe UI} -size 12")
        self.Label_Keg_Level.configure(foreground="#000000")
        self.Label_Keg_Level.configure(highlightbackground="#d9d9d9")
        self.Label_Keg_Level.configure(highlightcolor="black")
        self.Label_Keg_Level.configure(text='''Keg Level''')

        self.Label_Value_Keg_Level = tk.Label(self.RIGHT_SIDE)
        self.Label_Value_Keg_Level.place(relx=0.581, rely=0.292, height=35, width=80)
        self.Label_Value_Keg_Level.configure(activebackground="#f9f9f9")
        self.Label_Value_Keg_Level.configure(activeforeground="black")
        self.Label_Value_Keg_Level.configure(background="#ffffff")
        self.Label_Value_Keg_Level.configure(disabledforeground="#a3a3a3")
        self.Label_Value_Keg_Level.configure(font="-family {Segoe UI} -size 12")
        self.Label_Value_Keg_Level.configure(foreground="#000000")
        self.Label_Value_Keg_Level.configure(highlightbackground="#d9d9d9")
        self.Label_Value_Keg_Level.configure(highlightcolor="black")
        self.Label_Value_Keg_Level.configure(justify='left')
        self.Label_Value_Keg_Level.configure(text= (str(self.Keg_Level) + '%')) ##CGerrard 3/22#########################################################

        self.Label_CO2 = tk.Label(self.RIGHT_SIDE)
        self.Label_CO2.place(relx=0.0, rely=0.385, height=35, width=160)
        self.Label_CO2.configure(activebackground="#f9f9f9")
        self.Label_CO2.configure(activeforeground="black")
        self.Label_CO2.configure(background="#c0c0c0")
        self.Label_CO2.configure(disabledforeground="#a3a3a3")
        self.Label_CO2.configure(font="-family {Segoe UI} -size 12")
        self.Label_CO2.configure(foreground="#000000")
        self.Label_CO2.configure(highlightbackground="#d9d9d9")
        self.Label_CO2.configure(highlightcolor="black")
        self.Label_CO2.configure(text='''CO2 (psi)''')

        self.Label_Value_CO2 = tk.Label(self.RIGHT_SIDE)
        self.Label_Value_CO2.place(relx=0.581, rely=0.385, height=35, width=80)
        self.Label_Value_CO2.configure(activebackground="#f9f9f9")
        self.Label_Value_CO2.configure(activeforeground="black")
        self.Label_Value_CO2.configure(background="#ffffff")
        self.Label_Value_CO2.configure(disabledforeground="#a3a3a3")
        self.Label_Value_CO2.configure(font="-family {Segoe UI} -size 12")
        self.Label_Value_CO2.configure(foreground="#000000")
        self.Label_Value_CO2.configure(highlightbackground="#d9d9d9")
        self.Label_Value_CO2.configure(highlightcolor="black")
        self.Label_Value_CO2.configure(justify='left')
        self.Label_Value_CO2.configure(text='''0''')

        self.Label_Analytics = tk.Label(self.RIGHT_SIDE)
        self.Label_Analytics.place(relx=0.225, rely=0.5, height=26, width=160)
        self.Label_Analytics.configure(activebackground="#f9f9f9")
        self.Label_Analytics.configure(activeforeground="black")
        self.Label_Analytics.configure(background="#c0c0c0")
        self.Label_Analytics.configure(disabledforeground="#a3a3a3")
        self.Label_Analytics.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label_Analytics.configure(foreground="#000000")
        self.Label_Analytics.configure(highlightbackground="#d9d9d9")
        self.Label_Analytics.configure(highlightcolor="black")
        self.Label_Analytics.configure(text='''Analytics''')

        self.Label_Cumulative = tk.Label(self.RIGHT_SIDE)
        self.Label_Cumulative.place(relx=0.0, rely=0.594, height=35, width=160)
        self.Label_Cumulative.configure(activebackground="#f9f9f9")
        self.Label_Cumulative.configure(activeforeground="black")
        self.Label_Cumulative.configure(background="#c0c0c0")
        self.Label_Cumulative.configure(disabledforeground="#a3a3a3")
        self.Label_Cumulative.configure(font="-family {Segoe UI} -size 12")
        self.Label_Cumulative.configure(foreground="#000000")
        self.Label_Cumulative.configure(highlightbackground="#d9d9d9")
        self.Label_Cumulative.configure(highlightcolor="black")
        self.Label_Cumulative.configure(text='''Cumulative (oz)''')

        self.Label_Value_Cumulative = tk.Label(self.RIGHT_SIDE)
        self.Label_Value_Cumulative.place(relx=0.581, rely=0.594, height=35, width=80)
        self.Label_Value_Cumulative.configure(activebackground="#f9f9f9")
        self.Label_Value_Cumulative.configure(activeforeground="black")
        self.Label_Value_Cumulative.configure(background="#ffffff")
        self.Label_Value_Cumulative.configure(disabledforeground="#a3a3a3")
        self.Label_Value_Cumulative.configure(font="-family {Segoe UI} -size 12")
        self.Label_Value_Cumulative.configure(foreground="#000000")
        self.Label_Value_Cumulative.configure(highlightbackground="#d9d9d9")
        self.Label_Value_Cumulative.configure(highlightcolor="black")
        self.Label_Value_Cumulative.configure(justify='left')
        self.Label_Value_Cumulative.configure(text=(str(self.Cumulative))) ##CGerrard 3/22#########################################################

        self.Label_Reset = tk.Label(self.RIGHT_SIDE)
        self.Label_Reset.place(relx=0.225, rely=0.688, height=26, width=160)
        self.Label_Reset.configure(activebackground="#f9f9f9")
        self.Label_Reset.configure(activeforeground="black")
        self.Label_Reset.configure(background="#c0c0c0")
        self.Label_Reset.configure(disabledforeground="#a3a3a3")
        self.Label_Reset.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label_Reset.configure(foreground="#000000")
        self.Label_Reset.configure(highlightbackground="#d9d9d9")
        self.Label_Reset.configure(highlightcolor="black")
        self.Label_Reset.configure(text='''Reset''')

        self.Button_Reset_Cumulative = tk.Button(self.RIGHT_SIDE)
        self.Button_Reset_Cumulative.place(relx=0.281, rely=0.875, height=40, width=125)
        self.Button_Reset_Cumulative.configure(activebackground="#ffffff")
        self.Button_Reset_Cumulative.configure(activeforeground="#000000")
        self.Button_Reset_Cumulative.configure(background="#808080")
        self.Button_Reset_Cumulative.configure(borderwidth="1")
        self.Button_Reset_Cumulative.configure(command=self.Reset_Cumulative) ##CGerrard 3/22#########################################################
        self.Button_Reset_Cumulative.configure(compound='center')
        self.Button_Reset_Cumulative.configure(cursor="fleur")
        self.Button_Reset_Cumulative.configure(disabledforeground="#a3a3a3")
        self.Button_Reset_Cumulative.configure(font="-family {Segoe UI Light} -size 12")
        self.Button_Reset_Cumulative.configure(foreground="#ffffff")
        self.Button_Reset_Cumulative.configure(highlightbackground="#ffffff")
        self.Button_Reset_Cumulative.configure(highlightcolor="#000000")
        self.Button_Reset_Cumulative.configure(pady="0")
        self.Button_Reset_Cumulative.configure(text='''Cumulative''')

        self.Label_Error_Bar = tk.Label(top)
        self.Label_Error_Bar.place(relx=0.319, rely=0.885, height=45, width=100)
        self.Label_Error_Bar.configure(activebackground="#f9f9f9")
        self.Label_Error_Bar.configure(activeforeground="black")
        self.Label_Error_Bar.configure(background="#ff0000")
        self.Label_Error_Bar.configure(disabledforeground="#a3a3a3")
        self.Label_Error_Bar.configure(font="-family {Segoe UI} -size 8")
        self.Label_Error_Bar.configure(foreground="#000000")
        self.Label_Error_Bar.configure(highlightbackground="#d9d9d9")
        self.Label_Error_Bar.configure(highlightcolor="black")
        self.Label_Error_Bar.configure(text='''Error(s):''')

        self.Label_Value_Error = tk.Label(top)
        self.Label_Value_Error.place(relx=0.44, rely=0.885, height=45, width=170)
        self.Label_Value_Error.configure(activebackground="#f9f9f9")
        self.Label_Value_Error.configure(activeforeground="black")
        self.Label_Value_Error.configure(anchor='w')
        self.Label_Value_Error.configure(background="#dbdbdb")
        self.Label_Value_Error.configure(disabledforeground="#a3a3a3")
        self.Label_Value_Error.configure(font="-family {Segoe UI} -size 8")
        self.Label_Value_Error.configure(foreground="#000000")
        self.Label_Value_Error.configure(highlightbackground="#d9d9d9")
        self.Label_Value_Error.configure(highlightcolor="black")
        self.Label_Value_Error.configure(justify='left')
        self.Label_Value_Error.configure(text='''None''')

        self.Label_Status_Bar = tk.Label(top)
        self.Label_Status_Bar.place(relx=0.319, rely=0.771, height=45, width=100)
        self.Label_Status_Bar.configure(activebackground="#f9f9f9")
        self.Label_Status_Bar.configure(activeforeground="black")
        self.Label_Status_Bar.configure(background="#000000")
        self.Label_Status_Bar.configure(disabledforeground="#a3a3a3")
        self.Label_Status_Bar.configure(font="-family {Segoe UI} -size 8")
        self.Label_Status_Bar.configure(foreground="#ffffff")
        self.Label_Status_Bar.configure(highlightbackground="#d9d9d9")
        self.Label_Status_Bar.configure(highlightcolor="black")
        self.Label_Status_Bar.configure(justify='left')
        self.Label_Status_Bar.configure(text='''Status:''')

        self.Label_Value_Status = tk.Label(top)
        self.Label_Value_Status.place(relx=0.44, rely=0.771, height=45, width=170)
        self.Label_Value_Status.configure(activebackground="#f9f9f9")
        self.Label_Value_Status.configure(activeforeground="black")
        self.Label_Value_Status.configure(anchor='w')
        self.Label_Value_Status.configure(background="#dbdbdb")
        self.Label_Value_Status.configure(disabledforeground="#a3a3a3")
        self.Label_Value_Status.configure(font="-family {Segoe UI} -size 8")
        self.Label_Value_Status.configure(foreground="#000000")
        self.Label_Value_Status.configure(highlightbackground="#d9d9d9")
        self.Label_Value_Status.configure(highlightcolor="black")
        self.Label_Value_Status.configure(justify='left')
        self.Label_Value_Status.configure(text=self.Status_Text[0])
        
############## Custom Fuctions ###################################
        
    def Sampler(self):
        if self.Beer_Selected_State[0]:
            self.Beer_Selected_State[0] = False
            self.CheckButton_Small.configure(state='normal');self.CheckButton_Large.configure(state='normal')
        else:
            self.Beer_Selected_State[0] = True
            self.CheckButton_Small.configure(state='disabled');self.CheckButton_Large.configure(state='disabled')
        self.Update_Status_Bar()
        
    def Small(self):
        if self.Beer_Selected_State[1]:
            self.Beer_Selected_State[1] = False
            self.CheckButton_Sampler.configure(state='normal');self.CheckButton_Large.configure(state='normal')
        else:
            self.Beer_Selected_State[1] = True
            self.CheckButton_Sampler.configure(state='disabled'); self.CheckButton_Large.configure(state='disabled')
        self.Update_Status_Bar()

    def Large(self):
        if self.Beer_Selected_State[2]:
            self.Beer_Selected_State[2] = False
            self.CheckButton_Sampler.configure(state='normal');self.CheckButton_Small.configure(state='normal')
        else:
            self.Beer_Selected_State[2] = True
            self.CheckButton_Sampler.configure(state='disabled');self.CheckButton_Small.configure(state='disabled')
        self.Update_Status_Bar()

    def COMMAND_START_POUR(self):
        # Set Variable to Beer Size
        self.tracker_beer = next((i for i, j in enumerate(self.Beer_Selected_State) if j), None)
        
        if any(self.Beer_Selected_State) and self.Pouring_State is not True:
            self.Pouring_State = True
            Kegerator_V4_support.WRITE_GO_BIT(self.tracker_beer)
            
            # Update Cumulative Stats, Keg Level, System Status
            self.Set_Keg_Level()
            self.Set_Cumulative()
            
            self.Update_Status_Bar()
            root.update()
            
            # Continous Loop for Checking ESTOP or DONE BIT
            while(self.Done_Bit is False):
                self.Done_Bit = Kegerator_V4_support.READ_DONE_BIT()
                
                root.update()
                time.sleep(0.10)
                
                if self.Pouring_State is False:
                    break
                
        # self.COMMAND_STOP_POUR()

    def COMMAND_STOP_POUR(self):
        # Reset System After Finish Pouring or E-STOP Enabled
        if self.Pouring_State:
            # Finished Pouring
            if self.Done_Bit:
                Kegerator_V4_support.WRITE_RESET_PORTS()
            # E-STOP Enabled
            else:
                Kegerator_V4_support.WRITE_ESTOP()
                self.EStop_Bit = True
                Kegerator_V4_support.WRITE_RESET_PORTS()
            
        self.Pouring_State = False
               
        self.Update_Status_Bar()

    def COMMAND_CLEAN(self):
        if self.Pouring_State is not True and self.Cleaning_State is not True:
            self.Cleaning_State = True
            self.Cleaning_Hardware = True
        else:
            self.Cleaning_State = False
            
        self.Update_Status_Bar()

    def COMMAND_READ_PRESSURE(self):
        self.CO2 = round(float(Kegerator_V4_support.READ_PRESSURE_SENSOR()),2)
        if self.CO2 < 5.0 or self.CO2 > 25.0:
            self.CO2_LOW_HIGH = True
        else:
            self.CO2_LOW_HIGH = False
        self.Label_Value_CO2.configure(text= str(self.CO2))
    
    def Set_Keg_Level(self):
        if self.Reset_Keg:
            self.Keg_Level = round(self.Beer_Level / 660, 2) * 100
            self.Reset_Keg = False
        elif self.Pouring_State and self.Reset_Keg is not True:                
            self.Beer_Level = self.Beer_Level - ((self.tracker_beer + 1) * 4)
            self.Keg_Level = round(self.Beer_Level / 660, 3) * 100
            self.Replace_Keg = False
        elif (self.Keg_Level < 0 or self.Beer_Level < 0) and self.Pouring_State:
            self.Keg_Level = 0
            self.Beer_Level = 0
            self.Replace_Keg = True            
            
        self.Label_Value_Keg_Level.configure(text= (str(self.Keg_Level) + '%'))
        
        self.Update_Status_Bar()
            
    def Reset_Keg_Level(self):
        self.Beer_Level = 660
        self.Reset_Keg = True
        self.Set_Keg_Level()

    def Set_Cumulative(self):
        if self.Pouring_State:                
            self.Cumulative = self.Cumulative + ((self.tracker_beer + 1) * 4)
            
        self.Label_Value_Cumulative.configure(text=(str(self.Cumulative)))
        
    def Reset_Cumulative(self):
        self.Cumulative = 0
        self.Set_Cumulative()

    def Update_Status_Bar(self):
        
        self.COMMAND_READ_PRESSURE()
        
        if self.Pouring_State and any(self.Beer_Selected_State) and self.Cleaning_State is False:
            # 'Pouring'
            self.Label_Value_Status.configure(text=self.Status_Text[2])
        elif self.Pouring_State == False and any(self.Beer_Selected_State) and self.Cleaning_State is False:
            # 'Ready'
            self.Label_Value_Status.configure(text=self.Status_Text[1])
        elif self.Pouring_State == False and all(self.Beer_Selected_State) == False and self.Cleaning_State is False:
            # 'Select Beer Size'
            self.Label_Value_Status.configure(text=self.Status_Text[0])
        elif self.Pouring_State == True and self.Done_Bit == True and self.Cleaning_State is False:
            # 'Finished'
            self.Label_Value_Status.configure(text=self.Status_Text[3])
            self.Done_Bit = False

        self.Update_Error_Bar()  

    def Update_Error_Bar(self):
        self.Error_String = ''
        if self.EStop_Bit:
            self.Error_String = self.Error_String + ' - ' + self.Errors_Text[0]
            #self.Label_Value_Error.configure(text=self.Errors_Text[0])
            self.EStop_Bit = False
        elif self.Replace_Keg:
            # 'Replace Keg'
            self.Error_String = self.Error_String + ' - ' + self.Errors_Text[1]
            #self.Label_Value_Error.configure(text=self.Errors_Text[1])
        elif self.CO2_LOW_HIGH:
            # 'Check CO2'
            self.Error_String = self.Error_String + ' - ' + self.Errors_Text[2]
            #self.Label_Value_Error.configure(text=self.Errors_Text[2])
        elif self.Cleaning_Hardware:
            self.Error_String = self.Error_String + ' - ' + self.Errors_Text[4]
            if self.Cleaning_State:
                self.Cleaning_Hardware = False
            self.Cleaning_State = False

        # Concatenate All Error Strings into the Error Bar    
        self.Label_Value_Error.configure(text=self.Error_String)
        
"""     self.Status_Text = ['Select Beer Size','Ready','Pouring','Finished','Error','Cleaning']
        self.Errors_Text = ['E-Stop Triggered','Replace Keg','Check CO2','Check Leaks','Upgrade Cleaning Hardware']"""




####################################################################


if __name__ == '__main__':
    vp_start_gui()
    




